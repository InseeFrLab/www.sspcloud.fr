{"version":3,"file":"EducationalResourceHeader-Yc_pPqxm.js","sources":["../../node_modules/onyxia-ui/tools/useNonPostableEvtLike.js","../../node_modules/tsafe/esm/capitalize.mjs","../../src/core/tools/stringWithHighlights/renderStringWithHighlights.tsx","../../src/ui/shared/renderStringMaybeNotInAmbientLanguage.tsx","../../src/ui/shared/CoreViewText.tsx","../../node_modules/@mui/material/internal/svg-icons/Person.js","../../node_modules/@mui/material/Avatar/avatarClasses.js","../../node_modules/@mui/material/Avatar/Avatar.js","../../node_modules/onyxia-ui/node_modules/@mui/icons-material/esm/ChevronLeft.js","../../node_modules/onyxia-ui/DirectoryHeader.js","../../node_modules/onyxia-ui/Breadcrumb.js","../../src/ui/shared/EducationalResourceHeader.tsx"],"sourcesContent":["import { Evt } from \"evt\";\nimport { useGuaranteedMemo } from \"powerhooks/useGuaranteedMemo\";\nimport { useEvt } from \"evt/hooks\";\nexport function useNonPostableEvtLike(evtLike) {\n    const evt = useGuaranteedMemo(() => Evt.create(), [evtLike]);\n    useEvt(ctx => {\n        if (evtLike === undefined) {\n            return;\n        }\n        evtLike.attach(ctx, data => evt.post(data));\n    }, [evtLike]);\n    return (evtLike === undefined ? undefined : evt);\n}\n//# sourceMappingURL=useNonPostableEvtLike.js.map","/** @see <https://docs.tsafe.dev/capitalize> */\nexport function capitalize(str) {\n    return (str.charAt(0).toUpperCase() + str.slice(1));\n}\n//# sourceMappingURL=capitalize.mjs.map","import type { JSX } from \"react\";\nimport { id } from \"tsafe/id\";\nimport type { StringWithHighlights } from \"./highlightString\";\nimport { capitalize } from \"tsafe/capitalize\";\n\nexport function renderStringWithHighlights(params: {\n    stringWithHighlights: StringWithHighlights;\n    doCapitalize: boolean;\n    highlightedCharClassName: string;\n}): JSX.Element | string {\n    const {\n        stringWithHighlights: { charArray, highlightedIndexes },\n        doCapitalize,\n        highlightedCharClassName,\n    } = params;\n\n    const str = charArray.join(\"\");\n\n    if (highlightedIndexes.length === 0) {\n        return doCapitalize ? capitalize(str) : str;\n    }\n\n    return (\n        <span aria-label={str}>\n            {charArray\n                .map(\n                    !doCapitalize\n                        ? id\n                        : (char, i) => (i === 0 ? char.toUpperCase() : char),\n                )\n                .map((char, i) =>\n                    highlightedIndexes.includes(i) ? (\n                        <span key={i} className={highlightedCharClassName}>\n                            {char}\n                        </span>\n                    ) : (\n                        char\n                    ),\n                )}\n        </span>\n    );\n}\n","import type { ReactNode } from \"react\";\nimport type { TextMaybeNotInAmbientLanguage } from \"core/usecases/catalog\";\n\nexport function renderStringMaybeNotInAmbientLanguage<Text>(params: {\n    textMaybeNotInAmbientLanguage: TextMaybeNotInAmbientLanguage<Text>;\n    renderText: (text: Text) => ReactNode;\n}): ReactNode {\n    const { textMaybeNotInAmbientLanguage, renderText } = params;\n\n    if (typeof textMaybeNotInAmbientLanguage === \"string\") {\n        return renderText(textMaybeNotInAmbientLanguage);\n    }\n\n    const { text, langAttrValue } = textMaybeNotInAmbientLanguage;\n\n    return <span lang={langAttrValue}>{renderText(text)}</span>;\n}\n","import type { TextMaybeNotInAmbientLanguage } from \"core/usecases/catalog\";\nimport {\n    type StringWithHighlights,\n    renderStringWithHighlights,\n} from \"core/tools/stringWithHighlights\";\nimport { renderStringMaybeNotInAmbientLanguage } from \"ui/shared/renderStringMaybeNotInAmbientLanguage\";\nimport { tss } from \"ui/tss\";\nimport { id } from \"tsafe/id\";\nimport { capitalize } from \"tsafe/capitalize\";\n\ntype Props = {\n    text:\n        | TextMaybeNotInAmbientLanguage<StringWithHighlights>\n        | TextMaybeNotInAmbientLanguage<string>;\n    doCapitalize: boolean;\n};\n\nexport function CoreViewText(props: Props) {\n    const { text, doCapitalize } = props;\n\n    const { classes } = useStyles();\n\n    return renderStringMaybeNotInAmbientLanguage({\n        textMaybeNotInAmbientLanguage:\n            id<TextMaybeNotInAmbientLanguage<string | StringWithHighlights>>(text),\n        renderText: str =>\n            typeof str === \"string\"\n                ? doCapitalize\n                    ? capitalize(str)\n                    : str\n                : renderStringWithHighlights({\n                      stringWithHighlights: str,\n                      doCapitalize,\n                      highlightedCharClassName: classes.highlightedCharClassName,\n                  }),\n    });\n}\n\nconst useStyles = tss.withName({ CoreViewText }).create(({ theme }) => ({\n    highlightedCharClassName: {\n        color: theme.colors.useCases.typography.textFocus,\n        fontWeight: \"bold\",\n    },\n}));\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Person from \"../internal/svg-icons/Person.js\";\nimport { getAvatarUtilityClass } from \"./avatarClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: {\n      color: (theme.vars || theme).palette.background.default,\n      ...(theme.vars ? {\n        backgroundColor: theme.vars.palette.Avatar.defaultBg\n      } : {\n        backgroundColor: theme.palette.grey[400],\n        ...theme.applyStyles('dark', {\n          backgroundColor: theme.palette.grey[600]\n        })\n      })\n    }\n  }]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    slots = {},\n    slotProps = {},\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular',\n    ...other\n  } = props;\n  let children = null;\n  const ownerState = {\n    ...props,\n    component,\n    variant\n  };\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded({\n    ...imgProps,\n    ...(typeof slotProps.img === 'function' ? slotProps.img(ownerState) : slotProps.img),\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  ownerState.colorDefault = !hasImgNotFailing;\n  // This issue explains why this is required: https://github.com/mui/material-ui/issues/42184\n  delete ownerState.ownerState;\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: {\n          ...imgProps,\n          ...slotProps.img\n        }\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, {\n      ...imgSlotProps\n    });\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   * @deprecated Use `slotProps.img` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}), 'ChevronLeft');","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { tss } from \"./lib/tss\";\nimport { Text } from \"./Text\";\nimport { memo } from \"react\";\nimport { pxToNumber } from \"./tools/pxToNumber\";\nimport { IconButton } from \"./IconButton\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nexport const DirectoryHeader = memo((props) => {\n    const { className, image, title, subtitle, onGoBack } = props;\n    const { classes, cx } = useStyles({\n        classesOverrides: props.classes,\n    });\n    return (_jsxs(\"div\", Object.assign({ className: cx(classes.root, className) }, { children: [_jsx(\"div\", { children: _jsx(IconButton, { size: \"large\", icon: ChevronLeftIcon, onClick: onGoBack }) }), _jsx(\"div\", Object.assign({ className: classes.imageWrapper }, { children: image })), _jsxs(\"div\", { children: [_jsx(Text, Object.assign({ typo: \"object heading\" }, { children: title })), subtitle !== undefined && (_jsx(Text, Object.assign({ typo: \"caption\", className: classes.subtitle }, { children: subtitle })))] })] })));\n});\nconst useStyles = tss.withName({ DirectoryHeader }).create(({ theme }) => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n        borderBottom: `1px solid ${theme.colors.useCases.typography.textTertiary}`,\n    },\n    imageWrapper: Object.assign(Object.assign({ margin: theme.spacing({ topBottom: 4, rightLeft: 3 }), marginLeft: theme.spacing(1) }, (() => {\n        const height = pxToNumber(theme.typography.variants[\"object heading\"].style\n            .lineHeight) +\n            pxToNumber(theme.typography.variants[\"caption\"].style.lineHeight) +\n            theme.spacing(2);\n        return {\n            width: height,\n            height,\n        };\n    })()), { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }),\n    subtitle: {\n        marginTop: theme.spacing(2),\n        color: theme.colors.useCases.typography.textSecondary,\n        textTransform: \"capitalize\",\n    },\n}));\n//# sourceMappingURL=DirectoryHeader.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { tss } from \"./lib/tss\";\nimport { useMemo, useState, useEffect, memo } from \"react\";\nimport { Text } from \"./Text\";\nimport { useEvt } from \"evt/hooks\";\nimport { Evt } from \"evt\";\nimport { useCallbackFactory } from \"powerhooks/useCallbackFactory\";\nimport { assert } from \"tsafe/assert\";\nimport { symToStr } from \"tsafe/symToStr\";\nimport { useNonPostableEvtLike } from \"./tools/useNonPostableEvtLike\";\nexport const Breadcrumb = memo((props) => {\n    const { minDepth = 0, isNavigationDisabled = false, onNavigate, className, evtAction: evtActionLike, separatorChar = \"/\", } = props;\n    const evtAction = useNonPostableEvtLike(evtActionLike);\n    const [path, setPath] = useState(props.path);\n    const [isFocused, setIsFocused] = useState(false);\n    //TODO: Design custom hook for that\n    const [evtPropsPath] = useState(() => Evt.create(props.path));\n    useEffect(() => {\n        evtPropsPath.state = props.path;\n    }, [JSON.stringify(props.path)]);\n    useEvt(ctx => evtPropsPath.toStateless(ctx).attach(path => {\n        setIsFocused(false);\n        setPath(path);\n    }), [evtPropsPath]);\n    useEvt(ctx => {\n        const evtDisplayFeedback = evtAction === null || evtAction === void 0 ? void 0 : evtAction.pipe(data => data.action === \"DISPLAY COPY FEEDBACK\"\n            ? [data.basename]\n            : null);\n        evtDisplayFeedback === null || evtDisplayFeedback === void 0 ? void 0 : evtDisplayFeedback.attach(ctx, basename => {\n            setIsFocused(true);\n            setPath([\n                ...evtPropsPath.state,\n                ...(basename ? [basename] : []),\n            ]);\n            const scopedCtx = Evt.newCtx();\n            const timer = setTimeout(() => {\n                scopedCtx.done();\n                setIsFocused(false);\n                setPath(evtPropsPath.state);\n            }, 500);\n            scopedCtx.evtDoneOrAborted.attachOnce(() => clearTimeout(timer));\n            evtDisplayFeedback.attachOnce(scopedCtx, () => scopedCtx.done());\n            evtPropsPath\n                .toStateless(scopedCtx)\n                .attachOnce(() => scopedCtx.done());\n            ctx.evtDoneOrAborted.attachOnce(scopedCtx, () => scopedCtx.done());\n        });\n    }, [evtAction, evtPropsPath]);\n    const onClickFactory = useCallbackFactory(([partialPath, isClickable]) => !isClickable\n        ? assert(false)\n        : onNavigate({\n            path: partialPath,\n            upCount: path.length - partialPath.length,\n        }));\n    const partialPaths = useMemo(() => getPartialPaths({ path, minDepth, isNavigationDisabled }), [JSON.stringify(path), minDepth, isNavigationDisabled]);\n    return (_jsx(\"div\", Object.assign({ className: className }, { children: partialPaths.map(({ isClickable, isLast, partialPath }) => (_jsx(Section, Object.assign({}, { isClickable, isLast, partialPath, isFocused }, { onClick: onClickFactory(partialPath, isClickable), separatorChar: separatorChar }), JSON.stringify(partialPath)))) })));\n});\nfunction getPartialPaths(params) {\n    const { path, isNavigationDisabled } = params;\n    const { minDepth } = params;\n    return path.map((...[, i]) => {\n        const isLast = i === path.length - 1;\n        return {\n            partialPath: [...path].splice(0, i + 1),\n            isLast,\n            isClickable: isNavigationDisabled\n                ? false\n                : !isLast && i >= minDepth,\n        };\n    });\n}\nconst { Section } = (() => {\n    const hoverFontWeight = 500;\n    function Section(props) {\n        const { partialPath, isLast, onClick, isFocused, isClickable, separatorChar, } = props;\n        const text = useMemo(() => `${partialPath.slice(-1)[0]}${isLast ? \"\" : ` ${separatorChar}`}`, [partialPath, isLast]);\n        const { classes } = useStyles({ isClickable, isFocused, isLast });\n        return (_jsx(Text, Object.assign({ typo: \"body 1\", className: classes.root, componentProps: {\n                onClick: isClickable ? onClick : undefined,\n            }, fixedSize_enabled: true, fixedSize_fontWeight: hoverFontWeight }, { children: text })));\n    }\n    const useStyles = tss\n        .withName(`${symToStr({ Breadcrumb })}${symToStr({ Section })}`)\n        .withParams()\n        .create(({ theme, isClickable, isFocused, isLast }) => ({\n        root: Object.assign(Object.assign({}, (!isClickable\n            ? {}\n            : {\n                cursor: \"pointer\",\n                \"&:hover, &:focus\": {\n                    fontWeight: hoverFontWeight,\n                    color: theme.colors.useCases.typography\n                        .textPrimary,\n                },\n                \"&:active\": {\n                    color: theme.colors.useCases.typography.textFocus,\n                },\n            })), { color: theme.colors.useCases.typography[isFocused\n                ? \"textFocus\"\n                : isLast\n                    ? \"textPrimary\"\n                    : \"textSecondary\"] }),\n    }));\n    return { Section };\n})();\n//# sourceMappingURL=Breadcrumb.js.map","import type { View } from \"core/usecases/catalog/decoupledLogic/types\";\nimport { memo } from \"react\";\nimport { tss } from \"ui/tss\";\nimport { DirectoryHeader } from \"onyxia-ui/DirectoryHeader\";\nimport { Breadcrumb } from \"onyxia-ui/Breadcrumb\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { declareComponentKeys } from \"i18nifty\";\nimport { useTranslation } from \"ui/i18n\";\nimport { renderStringMaybeNotInAmbientLanguage } from \"ui/shared/renderStringMaybeNotInAmbientLanguage\";\n\ntype Props = {\n    className?: string;\n    viewHeader: View.Header;\n    onNavigateUp: (params: { upCount: number }) => void;\n};\n\nexport const EducationalResourceHeader = memo((props: Props) => {\n    const { className, viewHeader, onNavigateUp } = props;\n\n    const { classes, css } = useStyle();\n\n    const { t } = useTranslation({ EducationalResourceHeader });\n\n    return (\n        <div className={className}>\n            <DirectoryHeader\n                image={\n                    <Avatar\n                        src={viewHeader.imageUrl}\n                        alt=\"\"\n                        className={classes.directoryHeaderImage}\n                        classes={{\n                            img: css({ objectFit: \"contain\" }),\n                        }}\n                    />\n                }\n                title={renderStringMaybeNotInAmbientLanguage({\n                    textMaybeNotInAmbientLanguage: viewHeader.name,\n                    renderText: str => str,\n                })}\n                subtitle={\n                    viewHeader.authors.length === 1 ? (\n                        renderStringMaybeNotInAmbientLanguage({\n                            textMaybeNotInAmbientLanguage: viewHeader.authors[0],\n                            renderText: str => str,\n                        })\n                    ) : (\n                        <span>\n                            {viewHeader.authors.length} {t(\"contributors\")}\n                        </span>\n                    )\n                }\n                onGoBack={() => onNavigateUp({ upCount: 1 })}\n            />\n            <Breadcrumb\n                className={classes.breadcrumb}\n                path={[t(\"trainings\"), ...viewHeader.path.map(segment => segment.text)]}\n                onNavigate={onNavigateUp}\n            />\n        </div>\n    );\n});\n\nconst useStyle = tss.withName({ EducationalResourceHeader }).create(({ theme }) => ({\n    directoryHeaderImage: {\n        height: \"100%\",\n        width: \"100%\",\n    },\n    breadcrumb: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\nconst { i18n } = declareComponentKeys<\"trainings\" | \"contributors\">()({\n    EducationalResourceHeader,\n});\n\nexport type I18n = typeof i18n;\n"],"names":["useNonPostableEvtLike","evtLike","evt","useGuaranteedMemo","Evt","useEvt","ctx","data","capitalize","str","renderStringWithHighlights","params","charArray","highlightedIndexes","doCapitalize","highlightedCharClassName","jsx","char","i","id","renderStringMaybeNotInAmbientLanguage","textMaybeNotInAmbientLanguage","renderText","text","langAttrValue","CoreViewText","props","classes","useStyles","tss","theme","Person","createSvgIcon","_jsx","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","useUtilityClasses","ownerState","variant","colorDefault","composeClasses","AvatarRoot","styled","styles","memoTheme","AvatarImg","AvatarFallback","useLoaded","crossOrigin","referrerPolicy","src","srcSet","loaded","setLoaded","React.useState","React.useEffect","active","image","Avatar","React.forwardRef","inProps","ref","useDefaultProps","alt","childrenProp","className","component","slots","slotProps","imgProps","sizes","other","children","hasImg","hasImgNotFailing","ImgSlot","imgSlotProps","useSlot","clsx","ChevronLeftIcon","DirectoryHeader","memo","title","subtitle","onGoBack","cx","_jsxs","IconButton","Text","height","pxToNumber","Breadcrumb","minDepth","isNavigationDisabled","onNavigate","evtActionLike","separatorChar","evtAction","path","setPath","useState","isFocused","setIsFocused","evtPropsPath","useEffect","evtDisplayFeedback","basename","scopedCtx","timer","onClickFactory","useCallbackFactory","partialPath","isClickable","assert","partialPaths","useMemo","getPartialPaths","isLast","Section","onClick","symToStr","EducationalResourceHeader","viewHeader","onNavigateUp","css","useStyle","t","useTranslation","jsxs","segment","i18n","declareComponentKeys"],"mappings":"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","x_google_ignoreList":[0,1,5,6,7,8,9,10]}