{"version":3,"file":"Markdown-ByT23sOD.js","sources":["../../node_modules/onyxia-ui/CircularProgress.js","../../node_modules/powerhooks/useEffectOnValueChange.js","../../src/ui/shared/Markdown.tsx"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CircularProgress = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst tss_1 = require(\"./lib/tss\");\nconst react_1 = require(\"react\");\nconst CircularProgress_1 = __importDefault(require(\"@mui/material/CircularProgress\"));\nexports.CircularProgress = (0, react_1.memo)((props) => {\n    const { className, size = 40, color = \"primary\" } = props;\n    const { classes, cx } = useStyles({ color });\n    return ((0, jsx_runtime_1.jsx)(CircularProgress_1.default, { color: color === \"textPrimary\" ? undefined : color, className: cx(classes.root, className), size: size }));\n});\nconst useStyles = tss_1.tss\n    .withName({ CircularProgress: exports.CircularProgress })\n    .withParams()\n    .create(({ theme, color }) => ({\n    root: {\n        color: color !== \"textPrimary\"\n            ? undefined\n            : theme.colors.useCases.typography.textPrimary,\n    },\n}));\n//# sourceMappingURL=CircularProgress.js.map","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useEffectOnValueChange = void 0;\nvar react_1 = require(\"react\");\nfunction useEffectOnValueChange(effect, values) {\n    var refIsFistRender = (0, react_1.useRef)(true);\n    (0, react_1.useEffect)(function () {\n        if (refIsFistRender.current) {\n            refIsFistRender.current = false;\n            return;\n        }\n        return effect.apply(void 0, __spreadArray([], __read(values), false));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, values);\n}\nexports.useEffectOnValueChange = useEffectOnValueChange;\n//# sourceMappingURL=useEffectOnValueChange.js.map","import { useMemo, useEffect, useState, memo } from \"react\";\nimport { createMarkdown } from \"onyxia-ui/Markdown\";\nimport type { Param0 } from \"tsafe\";\nimport { type LocalizedString, useResolveLocalizedString } from \"ui/i18n\";\nimport { ensureUrlIsSafe } from \"ui/tools/ensureUrlIsSafe\";\nimport { CircularProgress } from \"onyxia-ui/CircularProgress\";\nimport memoizee from \"memoizee\";\nimport { assert } from \"tsafe/assert\";\nimport { symToStr } from \"tsafe/symToStr\";\nimport { urlToLink } from \"ui/routes\";\nimport { useEffectOnValueChange } from \"powerhooks/useEffectOnValueChange\";\n\nexport const { Markdown } = createMarkdown({\n    getLinkProps: ({ href }) => urlToLink(href),\n});\n\n/**\n * The localizedString provided as children can represent Markdown, urls\n * or a mix of both.\n * If the source isn't trusted `urlSourceOnly` should be set to true (we enforce the source of the Markdown to be self-hosted).\n */\nexport const LocalizedMarkdown = memo(\n    (\n        props: Omit<Param0<typeof Markdown>, \"children\" | \"lang\"> & {\n            urlSourceOnly?: boolean;\n            children: LocalizedString;\n        },\n    ) => {\n        const { children: localizedString, urlSourceOnly = false, ...rest } = props;\n\n        const { resolveLocalizedStringDetailed } = useResolveLocalizedString({\n            labelWhenMismatchingLanguage: true,\n        });\n\n        const { langAttrValue, str: urlOrMarkdown } = useMemo(\n            () => resolveLocalizedStringDetailed(localizedString),\n            [localizedString, resolveLocalizedStringDetailed],\n        );\n\n        const isSafeUrl = useMemo(() => {\n            try {\n                ensureUrlIsSafe(urlOrMarkdown);\n            } catch {\n                return false;\n            }\n\n            const isSafeUrl = urlOrMarkdown.endsWith(\".md\");\n\n            if (urlSourceOnly) {\n                assert(\n                    isSafeUrl,\n                    \"Rendering of inlined Markdown text isn't allowed here\",\n                );\n            }\n\n            return isSafeUrl;\n        }, [urlOrMarkdown, urlSourceOnly]);\n\n        const markdown_tmp = isSafeUrl ? undefined : urlOrMarkdown;\n\n        const [markdown, setMarkdown] = useState<string | undefined>(markdown_tmp);\n\n        useEffectOnValueChange(() => {\n            setMarkdown(markdown_tmp);\n        }, [markdown_tmp]);\n\n        useEffect(() => {\n            if (!isSafeUrl) {\n                return;\n            }\n\n            let isActive = true;\n\n            (async () => {\n                const url = urlOrMarkdown;\n\n                let markdown: string;\n\n                try {\n                    markdown = await fetchText_memoized(url);\n                } catch {\n                    markdown = `Can't resolve ${url}`;\n                }\n\n                if (!isActive) {\n                    return;\n                }\n\n                markdown = markdown.replace(\n                    /%PUBLIC_URL%/g,\n                    import.meta.env.BASE_URL.replace(/\\/$/, \"\"),\n                );\n\n                setMarkdown(markdown);\n            })();\n\n            return () => {\n                isActive = false;\n            };\n        }, [urlOrMarkdown, isSafeUrl]);\n\n        if (markdown === undefined) {\n            return <CircularProgress />;\n        }\n\n        return (\n            <Markdown {...rest} lang={langAttrValue}>\n                {markdown}\n            </Markdown>\n        );\n    },\n);\n\nLocalizedMarkdown.displayName = symToStr({ LocalizedMarkdown });\n\nconst fetchText_memoized = memoizee((url: string) => fetch(url).then(r => r.text()), {\n    promise: true,\n});\n"],"names":["__importDefault","this","mod","exports","jsx_runtime_1","require$$0","tss_1","require$$1","react_1","require$$2","CircularProgress_1","require$$3","props","className","size","color","classes","cx","useStyles","theme","__read","n","m","i","r","ar","e","error","__spreadArray","to","from","pack","l","useEffectOnValueChange_1","useEffectOnValueChange","effect","values","refIsFistRender","Markdown","createMarkdown","href","urlToLink","LocalizedMarkdown","memo","localizedString","urlSourceOnly","rest","resolveLocalizedStringDetailed","useResolveLocalizedString","langAttrValue","urlOrMarkdown","useMemo","isSafeUrl","ensureUrlIsSafe","assert","markdown_tmp","markdown","setMarkdown","useState","useEffect","isActive","url","fetchText_memoized","CircularProgress","symToStr","memoizee"],"mappings":"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","x_google_ignoreList":[0,1]}