name: Build, Push and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOCKER_IMAGE: christianrogers/www-sspcloud-fr
  DOCKER_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT || 22 }}
        script: |
          # Login to Docker Hub on the server
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          
          # Stop and remove existing container if it exists
          docker stop www-sspcloud-fr || true
          docker rm www-sspcloud-fr || true
          
          # Pull the latest image
          docker pull ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          
          # Run the new container
          docker run -d \
            --name www-sspcloud-fr \
            --restart unless-stopped \
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          
          # Clean up old images (keep last 3)
          docker image prune -f
          docker images ${{ env.DOCKER_IMAGE }} --format "table {{.Repository}}\t{{.Tag}}\t{{.ID}}" | tail -n +4 | awk '{print $3}' | xargs -r docker rmi || true
          
          # Verify deployment
          sleep 10
          docker ps | grep www-sspcloud-fr || exit 1
          
          echo "Deployment completed successfully!"
